"0",""
"0",""
"0","knitr::opts_chunk$set(echo=FALSE, message = FALSE, warning = FALSE)"
"0",""
"0",""
"0","library(RPostgreSQL)"
"0","library(rgeos)"
"0","library(sp)"
"0","library(rgdal)"
"0","library(leaflet)"
"0","library(leaflet.extras)"
"0","library(mapview)"
"0",""
"0",""
"0","conn <- dbConnect(dbDriver(""PostgreSQL""), dbname=""bderamo2021_gold"", host=""10.200.31.73"",port=5432,user=""eramo_gold"",password=""ERAMO_GOLD"")"
"0",""
"0","datos <- dbGetQuery(conn,""select *, st_astext(centroid) as point from public.super_agropecuario"")"
"0",""
"0","datos1 <- datos[which(datos$cuest_pecuario==""Sí"" & datos$conoce_bancos==""Sí""),]"
"0","datos2 <- datos[which(datos$cuest_pecuario==""Sí"" & datos$conoce_redalimentaria==""Sí""),]"
"0","datos3 <- datos[which(datos$cuest_pecuario==""Sí"" & datos$conoce_programas==""Sí""),]"
"0",""
"0","res <- dbDisconnect(conn)"
"0",""
"0","#row.names(datos) = datos$producto"
"0",""
"0","## Load projections"
"0","EPSG <- make_EPSG()"
"0","p4s <- EPSG[which(EPSG$code == 4326), ""prj4""]"
"0",""
"0",""
"0","# Create polygons from WKT"
"0","sp_obj <- datos %$%"
"0","mapply(rgeos::readWKT, id = id_agrop, text = point) %>%"
"0","do.call(sp::rbind.SpatialPoints, .)"
"0",""
"0","sp_obj1 <- datos1 %$%"
"0","mapply(rgeos::readWKT, id = id_agrop, text = point) %>%"
"0","do.call(sp::rbind.SpatialPoints, .)"
"0",""
"0","sp_obj2 <- datos2 %$%"
"0","mapply(rgeos::readWKT, id = id_agrop, text = point) %>%"
"0","do.call(sp::rbind.SpatialPoints, .)"
"0",""
"0","sp_obj3 <- datos3 %$%"
"0","mapply(rgeos::readWKT, id = id_agrop, text = point) %>%"
"0","do.call(sp::rbind.SpatialPoints, .)"
"0",""
"0",""
"0","## Create SpatialPolygonsDataFrame"
"0","sp_df = SpatialPointsDataFrame(sp_obj, datos[-2])"
"0","sp_df$key <- factor(sp_df$id_agrop)"
"0","datos$key <- factor(datos$id_agrop)"
"0",""
"0","sp_df1 = SpatialPointsDataFrame(sp_obj1, datos1[-2])"
"0","sp_df1$key <- factor(sp_df1$id_agrop)"
"0","datos1$key <- factor(datos1$id_agrop)"
"0",""
"0","sp_df2 = SpatialPointsDataFrame(sp_obj2, datos2[-2])"
"0","sp_df2$key <- factor(sp_df2$id_agrop)"
"0","datos2$key <- factor(datos2$id_agrop)"
"0",""
"0","sp_df3 = SpatialPointsDataFrame(sp_obj3, datos3[-2])"
"0","sp_df3$key <- factor(sp_df3$id_agrop)"
"0","datos3$key <- factor(datos3$id_agrop)"
"0",""
"0",""
"0","## pal <- colorFactor(rainbow(15), levels = levels(datos$interview__key), na.color = ""white"")"
"0",""
"0",""
"0","library(sp)"
"0","library(rgdal)"
"0","library(leaflet)"
"0","library(htmltools)"
"0","library(htmlwidgets)"
"0","library(leaflet.extras)"
"0","library(mapview)"
"0",""
"0",""
"0","m <- leaflet() %>% "
"0","  "
"0","  #addTiles(group = ""OSM"") %>% "
"0","  #addProviderTiles(""CartoDB.Positron"") %>%"
"0","  #addProviderTiles(CartoDB.Positron) %>%"
"0","  addProviderTiles(""CartoDB.Positron"", group = ""Carto"") %>%"
"0","  addFullscreenControl()"
"0",""
"0",""
"0","m %>% setView(lng = -102.43, lat = 22.37, zoom = 5.4) %>%"
"0","  "
"0","  "
"0","  addMarkers(data= sp_df1,"
"0","           clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),"
"0","           popup = paste0( ""<strong>Entidad: </strong>"", sp_df1$nom_ent, ""</br>"","
"0","                           ""<strong>Municipio: </strong>"", sp_df1$nom_mun, ""</br>""),"
"0","           group = ""Bancos de alimentos"""
"0","           ) %>%"
"0","  "
"0","  addMarkers(data= sp_df2,"
"0","           clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),"
"0","           popup = paste0( ""<strong>Entidad: </strong>"", sp_df2$nom_ent, ""</br>"","
"0","                           ""<strong>Municipio: </strong>"", sp_df2$nom_mun, ""</br>""),"
"0","           group = ""Redes alimentarias"""
"0","           ) %>%"
"0","  "
"0","  addMarkers(data= sp_df3,"
"0","           clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),"
"0","           popup = paste0( ""<strong>Entidad: </strong>"", sp_df3$nom_ent, ""</br>"","
"0","                           ""<strong>Municipio: </strong>"", sp_df3$nom_mun, ""</br>""),"
"0","           group = ""Campañas para reducir la PDA"""
"0","           ) %>%"
"0",""
"0","  "
"0","  "
"0","  addLayersControl(#m,"
"0","                   baseGroups = c(""Bancos de alimentos"", ""Redes alimentarias"", ""Campañas para reducir la PDA"")"
"0","                   #overlayGroups = c(""uAgropecuarias"", ""uAgro"", ""uPec"", ""uAmb""),"
"0","                   #options = layersControlOptions(collapsed = FALSE)"
"0","                   )"
