# Diseño de la muestra para prueba piloto ERAMO

# Carpeta para la BD 
dir.create("bd_denue")


# Descarga de base de datos del DENUE
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_11_csv.zip","bd_denue/denue_00_11_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_43_csv.zip","bd_denue/denue_00_43_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_46111_csv.zip","bd_denue/denue_00_46111_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_46112-46311_csv.zip","bd_denue/denue_00_46112-46311_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_46321-46531_csv.zip","bd_denue/denue_00_46321-46531_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_46591-46911_csv.zip","bd_denue/denue_00_46591-46911_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_31-33_csv.zip","bd_denue/denue_00_31-33_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_72_csv.zip","bd_denue/denue_00_72_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_56_csv.zip","bd_denue/denue_00_56_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_62_csv.zip","bd_denue/denue_00_62_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_48-49_csv.zip","bd_denue/denue_00_48-49_csv.zip")
download.file("https://www.inegi.org.mx/contenidos/masiva/denue/denue_00_61_csv.zip","bd_denue/denue_00_61_csv.zip")


# Descomprime los archivos zip
unzip("bd_denue/denue_00_11_csv.zip", exdir = "bd_denue/11")
unzip("bd_denue/denue_00_43_csv.zip", exdir = "bd_denue/43")
unzip("bd_denue/denue_00_46111_csv.zip", exdir = "bd_denue/46111")
unzip("bd_denue/denue_00_46112-46311_csv.zip", exdir = "bd_denue/46112_46311")
unzip("bd_denue/denue_00_46321-46531_csv.zip", exdir = "bd_denue/46321_46531")
unzip("bd_denue/denue_00_46591-46911_csv.zip", exdir = "bd_denue/46591_46911")
unzip("bd_denue/denue_00_31-33_csv.zip", exdir = "bd_denue/31_33")
unzip("bd_denue/denue_00_72_csv.zip", exdir = "bd_denue/72")
unzip("bd_denue/denue_00_56_csv.zip", exdir = "bd_denue/56")
unzip("bd_denue/denue_00_62_csv.zip", exdir = "bd_denue/62")
unzip("bd_denue/denue_00_48-49_csv.zip", exdir = "bd_denue/48_49")
unzip("bd_denue/denue_00_61_csv.zip", exdir = "bd_denue/61")


# Catalogo de claves SCIAN para la encuesta
eramo_scian <- read.csv("tabs/eramo_scian.csv")

# Lectura y filtrado de tablas
denue11 <- read.csv("bd_denue/11/conjunto_de_datos/denue_inegi_11_.csv", 
                    encoding = 'UTF-8')
denue11 <- subset(denue11, ((is.element(denue11$codigo_act,eramo_scian$codigo))
                             & (denue11$cve_ent == 9 |  
                            (denue11$cve_ent == 14 & is.element(denue11$cve_mun, c(120,101,98,39))) |
                            (denue11$cve_ent == 19 & is.element(denue11$cve_mun, c(39,26,46,21,6,48,19))))))
                  
denue43 <- read.csv("bd_denue/43/conjunto_de_datos/denue_inegi_43_.csv", 
                    encoding = 'UTF-8')
denue43 <- subset(denue43, ((is.element(denue43$codigo_act,eramo_scian$codigo))
                            & (denue43$cve_ent == 9 |  
                                 (denue43$cve_ent == 14 & is.element(denue43$cve_mun, c(120,101,98,39))) |
                                 (denue43$cve_ent == 19 & is.element(denue43$cve_mun, c(39,26,46,21,6,48,19))))))

denue46111 <- read.csv("bd_denue/46111/conjunto_de_datos/denue_inegi_46111_.csv", 
                       encoding = 'UTF-8')
denue46111 <- subset(denue46111, ((is.element(denue46111$codigo_act,eramo_scian$codigo))
                                  & (denue46111$cve_ent == 9 |  
                                       (denue46111$cve_ent == 14 & is.element(denue46111$cve_mun, c(120,101,98,39))) |
                                       (denue46111$cve_ent == 19 & is.element(denue46111$cve_mun, c(39,26,46,21,6,48,19))))))
rm(denue46111) # ninguna observación de la población de interés

denue46112_46311<- read.csv("bd_denue/46112_46311/conjunto_de_datos/denue_inegi_46112-46311_.csv", 
                            encoding = 'UTF-8')
denue46112_46311<- subset(denue46112_46311, ((is.element(denue46112_46311$codigo_act,eramo_scian$codigo))
                                             & (denue46112_46311$cve_ent == 9 |  
                                                  (denue46112_46311$cve_ent == 14 & is.element(denue46112_46311$cve_mun, c(120,101,98,39))) |
                                                  (denue46112_46311$cve_ent == 19 & is.element(denue46112_46311$cve_mun, c(39,26,46,21,6,48,19))))))

denue46321_46531<- read.csv("bd_denue/46321_46531/conjunto_de_datos/denue_inegi_46321-46531_.csv", 
                            encoding = 'UTF-8')
denue46321_46531<- subset(denue46321_46531, ((is.element(denue46321_46531$codigo_act,eramo_scian$codigo))
                                             & (denue46321_46531$cve_ent == 9 |  
                                                  (denue46321_46531$cve_ent == 14 & is.element(denue46321_46531$cve_mun, c(120,101,98,39))) |
                                                  (denue46321_46531$cve_ent == 19 & is.element(denue46321_46531$cve_mun, c(39,26,46,21,6,48,19))))))

denue46591_46911<- read.csv("bd_denue/46591_46911/conjunto_de_datos/denue_inegi_46591-46911_.csv", 
                            encoding = 'UTF-8')
denue46591_46911<- subset(denue46591_46911, ((is.element(denue46591_46911$codigo_act,eramo_scian$codigo))
                                             & (denue46591_46911$cve_ent == 9 |  
                                                  (denue46591_46911$cve_ent == 14 & is.element(denue46591_46911$cve_mun, c(120,101,98,39))) |
                                                  (denue46591_46911$cve_ent == 19 & is.element(denue46591_46911$cve_mun, c(39,26,46,21,6,48,19))))))
rm(denue46591_46911) # ninguna observación de la población de interés

denue31_33<- read.csv("bd_denue/31_33/conjunto_de_datos/denue_inegi_31-33_.csv", 
                      encoding = 'UTF-8')
denue31_33<- subset(denue31_33, ((is.element(denue31_33$codigo_act,eramo_scian$codigo))
                                 & (denue31_33$cve_ent == 9 |  
                                      (denue31_33$cve_ent == 14 & is.element(denue31_33$cve_mun, c(120,101,98,39))) |
                                      (denue31_33$cve_ent == 19 & is.element(denue31_33$cve_mun, c(39,26,46,21,6,48,19))))))

denue72<- read.csv("bd_denue/72/conjunto_de_datos/denue_inegi_72_.csv", 
                   encoding = 'UTF-8')
denue72<- subset(denue72, ((is.element(denue72$codigo_act,eramo_scian$codigo))
                           & (denue72$cve_ent == 9 |  
                                (denue72$cve_ent == 14 & is.element(denue72$cve_mun, c(120,101,98,39))) |
                                (denue72$cve_ent == 19 & is.element(denue72$cve_mun, c(39,26,46,21,6,48,19))))))

denue56<- read.csv("bd_denue/56/conjunto_de_datos/denue_inegi_56_.csv", 
                   encoding = 'UTF-8')
denue56<- subset(denue56, ((is.element(denue56$codigo_act,eramo_scian$codigo))
                           & (denue56$cve_ent == 9 |  
                                (denue56$cve_ent == 14 & is.element(denue56$cve_mun, c(120,101,98,39))) |
                                (denue56$cve_ent == 19 & is.element(denue56$cve_mun, c(39,26,46,21,6,48,19))))))
rm(denue56) # ninguna observación de la población de interés

denue62<- read.csv("bd_denue/62/conjunto_de_datos/denue_inegi_62_.csv", 
                   encoding = 'UTF-8')
denue62<- subset(denue62, ((is.element(denue62$codigo_act,eramo_scian$codigo))
                           & (denue62$cve_ent == 9 |  
                                (denue62$cve_ent == 14 & is.element(denue62$cve_mun, c(120,101,98,39))) |
                                (denue62$cve_ent == 19 & is.element(denue62$cve_mun, c(39,26,46,21,6,48,19))))))

denue48_49<- read.csv("bd_denue/48_49/conjunto_de_datos/denue_inegi_48-49_.csv", 
                      encoding = 'UTF-8')
denue48_49<- subset(denue48_49, ((is.element(denue48_49$codigo_act,eramo_scian$codigo))
                                 & (denue48_49$cve_ent == 9 |  
                                      (denue48_49$cve_ent == 14 & is.element(denue48_49$cve_mun, c(120,101,98,39))) |
                                      (denue48_49$cve_ent == 19 & is.element(denue48_49$cve_mun, c(39,26,46,21,6,48,19))))))

denue61<- read.csv("bd_denue/61/conjunto_de_datos/denue_inegi_61_.csv", 
                   encoding = 'UTF-8')
denue61<- subset(denue61, ((is.element(denue61$codigo_act,eramo_scian$codigo))
                           & (denue61$cve_ent == 9 |  
                                (denue61$cve_ent == 14 & is.element(denue61$cve_mun, c(120,101,98,39))) |
                                (denue61$cve_ent == 19 & is.element(denue61$cve_mun, c(39,26,46,21,6,48,19))))))

# Unión de tablas
mm_eramo <- rbind(denue11,denue43,denue46112_46311,denue46321_46531,
                  denue31_33,denue72,denue62,denue48_49,denue61)

# Tabla ejemplo
mm_eramo_ejem <- mm_eramo[1:500,]
#write.csv(mm_eramo,"tabs/mm_eramo.csv")
#write.csv(mm_eramo_ejem,"tabs/mm_eramo_ejem.csv")

# Se asigna número (o nivel) a cada estrato (7)
mm_eramo$estrato[mm_eramo$per_ocu == "0 a 5 personas"] <- 1
mm_eramo$estrato[mm_eramo$per_ocu == "6 a 10 personas"] <- 2
mm_eramo$estrato[mm_eramo$per_ocu == "11 a 30 personas"] <- 3
mm_eramo$estrato[mm_eramo$per_ocu == "31 a 50 personas"] <- 4
mm_eramo$estrato[mm_eramo$per_ocu == "51 a 100 personas"] <- 5
mm_eramo$estrato[mm_eramo$per_ocu == "101 a 250 personas"] <- 6
mm_eramo$estrato[mm_eramo$per_ocu == "251 y más personas"] <- 7

# AGEB´s
agebs_guad <- as.vector(mm_eramo$ageb[which(mm_eramo$cve_ent == 14)])
summary(as.vector(table(agebs_guad)))
plot(table(agebs_guad))

# Selección de conglomerados Guadalajara:
mi <- sort(tapply(rep(1,length(agebs_guad)),agebs_guad,sum),decreasing = T)
mi2 <- as.data.frame(names(mi))
mi2$probs <- mi/sum(mi)
muestr <- sample(mi2[,1], size=15, replace = FALSE, prob = mi2[,2])
agebs_sel_guad <- c("422A","3726","5366","2145","3660","3923","2115",
                    "0435","447A","3382","2639","4565","507A","6230","2435")
mm_eramo_guad <- subset(mm_eramo, mm_eramo$cve_ent == 14)
mues_agebs_guad <- subset(mm_eramo_guad, is.element(mm_eramo_guad$ageb, agebs_sel_guad))

# Seleccón de UE
est7_guad <- subset(mues_agebs_guad, mues_agebs_guad$estrato == 7)
mues_est7 <- sample(est7_guad$id, size = 3)
mues_def_est7 <- subset(mues_agebs_guad, 
                          is.element(mues_agebs_guad$id,mues_est7))

est6_guad <- subset(mues_agebs_guad, mues_agebs_guad$estrato == 6)
mues_est6 <- sample(est6_guad$id, size = 3)
mues_def_est6 <- subset(mues_agebs_guad, 
                        is.element(mues_agebs_guad$id,mues_est6))

est5_guad <- subset(mues_agebs_guad, mues_agebs_guad$estrato == 5)
mues_est5 <- sample(est5_guad$id, size = 7)
mues_def_est5 <- subset(mues_agebs_guad, 
                        is.element(mues_agebs_guad$id,mues_est5))

est4_guad <- subset(mues_agebs_guad, mues_agebs_guad$estrato == 4)
mues_est4 <- sample(est4_guad$id, size = 10)
mues_def_est4 <- subset(mues_agebs_guad, 
                        is.element(mues_agebs_guad$id,mues_est4))

est3_guad <- subset(mues_agebs_guad, mues_agebs_guad$estrato == 3)
mues_est3 <- sample(est3_guad$id, size = 30)
mues_def_est3 <- subset(mues_agebs_guad, 
                        is.element(mues_agebs_guad$id,mues_est3))

est2_guad <- subset(mues_agebs_guad, mues_agebs_guad$estrato == 2)
mues_est2 <- sample(est2_guad$id, size = 38)
mues_def_est2 <- subset(mues_agebs_guad, 
                        is.element(mues_agebs_guad$id,mues_est2))

est1_guad <- subset(mues_agebs_guad, mues_agebs_guad$estrato == 1)
mues_est1 <- sample(est1_guad$id, size = 59)
mues_def_est1 <- subset(mues_agebs_guad, 
                        is.element(mues_agebs_guad$id,mues_est1))


MUESTRA <- rbind(mues_def_est1,mues_def_est2,mues_def_est3,mues_def_est4,mues_def_est5,mues_def_est6,mues_def_est7)



# Mapa
library(sp)
library(rgdal)
library(leaflet)
library(leaflet.extras)
library(mapview)
library(raster)
library(bitops)
library(rjson)
library(stringr)

puntos1 <- SpatialPointsDataFrame(mues_def_est1[,c(40,39)],mues_def_est1[,-c(40,39)])
writeOGR(puntos1, "shape_files", "puntos01", driver="ESRI Shapefile", encoding = 'UTF-8',
         overwrite_layer=T)
puntos_11 <- readOGR("shape_files/puntos01.shp", encoding = 'UTF-8',
                      "puntos01", verbose=FALSE)
puntos11@data$latitud <- puntos1$latitud
puntos11@data$longitud <- puntos1$longitud



m <- leaflet() %>% addTiles() %>% addFullscreenControl()
m %>% setView(lng = -102.43, lat = 22.37, zoom = 5.4)  %>%
  addMarkers(data=puntos_sp12, icon = iconos[1],
             clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),
             popup = paste0( "<strong>NRA: </strong>", puntos2$NRA[which(copkg > 0)], "</br>",
                             "<strong>MUNICIPIO: </strong>", paste(puntos2$MUNICIPIO[which(copkg > 0)], puntos2$ESTADO[which(copkg > 0)],sep = ", "), "</br>",
                             "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", puntos2$NOMBRE[which(copkg > 0)], "</br>",
                             "<strong>TIPO DE INDUSTRIA: </strong>", puntos2$SECTOR[which(copkg > 0)], "</br>",
                             "<strong>GIRO: </strong>", puntos2$DESC_SCIAN[which(copkg > 0)], "</br>",
                             "<strong>ACTIVIDAD: </strong>", puntos2$ACTIVIDAD[which(copkg > 0)], "</br>",
                             "<strong>EMISIONES: </strong>", aux$emistot2[which(copkg > 0)]),
             group = "Compuestos Orgánicos Persistentes")  %>%
  addMarkers(data=puntos_sp22, icon = iconos[2],
             clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),
             popup = paste0( "<strong>NRA: </strong>", puntos2$NRA[which(geikg > 0)], "</br>",
                             "<strong>MUNICIPIO: </strong>", paste(puntos2$MUNICIPIO[which(geikg > 0)],puntos2$ESTADO[which(geikg > 0)],sep = ", "), "</br>",
                             "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", puntos2$NOMBRE[which(geikg > 0)], "</br>",
                             "<strong>TIPO DE INDUSTRIA: </strong>", puntos2$SECTOR[which(geikg > 0)], "</br>",
                             "<strong>GIRO: </strong>", puntos2$DESC_SCIAN[which(geikg > 0)], "</br>",
                             "<strong>ACTIVIDAD: </strong>", puntos2$ACTIVIDAD[which(geikg > 0)], "</br>",
                             "<strong>EMISIONES: </strong>", aux$emistot2[which(geikg > 0)]),
             group = "Gases de Efecto Invernadero")  %>%
  addMarkers(data=puntos_sp32, icon = iconos[3],
             clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),
             popup = paste0( "<strong>NRA: </strong>", puntos2$NRA[which(haralkg > 0)], "</br>",
                             "<strong>MUNICIPIO: </strong>", paste(puntos2$MUNICIPIO[which(haralkg > 0)],puntos2$ESTADO[which(haralkg > 0)],sep = ", "), "</br>",
                             "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", puntos2$NOMBRE[which(haralkg > 0)], "</br>",
                             "<strong>TIPO DE INDUSTRIA: </strong>", puntos2$SECTOR[which(haralkg > 0)], "</br>",
                             "<strong>GIRO: </strong>", puntos2$DESC_SCIAN[which(haralkg > 0)], "</br>",
                             "<strong>ACTIVIDAD: </strong>", puntos2$ACTIVIDAD[which(haralkg > 0)], "</br>",
                             "<strong>EMISIONES: </strong>", aux$emistot2[which(haralkg > 0)]),
             group = "Hidrocarburos Aromáticos y Alifáticos")  %>%
  addMarkers(data=puntos_sp42, icon = iconos[4],
             clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),
             popup = paste0( "<strong>NRA: </strong>", puntos2$NRA[which(metkg > 0)], "</br>",
                             "<strong>MUNICIPIO: </strong>", paste(puntos2$MUNICIPIO[which(metkg > 0)],puntos2$ESTADO[which(metkg > 0)],sep = ", "), "</br>",
                             "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", puntos2$NOMBRE[which(metkg > 0)], "</br>",
                             "<strong>TIPO DE INDUSTRIA: </strong>", puntos2$SECTOR[which(metkg > 0)], "</br>",
                             "<strong>GIRO: </strong>", puntos2$DESC_SCIAN[which(metkg > 0)], "</br>",
                             "<strong>ACTIVIDAD: </strong>", puntos2$ACTIVIDAD[which(metkg > 0)], "</br>",
                             "<strong>EMISIONES: </strong>", aux$emistot2[which(metkg > 0)]),
             group = "Metales")  %>%
  addMarkers(data=puntos_sp52, icon = iconos[5],
             clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),
             popup = paste0( "<strong>NRA: </strong>", puntos2$NRA[which(orghalkg > 0)], "</br>",
                             "<strong>MUNICIPIO: </strong>", paste(puntos2$MUNICIPIO[which(orghalkg > 0)],puntos2$ESTADO[which(orghalkg > 0)],sep = ", "), "</br>",
                             "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", puntos2$NOMBRE[which(orghalkg > 0)], "</br>",
                             "<strong>TIPO DE INDUSTRIA: </strong>", puntos2$SECTOR[which(orghalkg > 0)], "</br>",
                             "<strong>GIRO: </strong>", puntos2$DESC_SCIAN[which(orghalkg > 0)], "</br>",
                             "<strong>ACTIVIDAD: </strong>", puntos2$ACTIVIDAD[which(orghalkg > 0)], "</br>",
                             "<strong>EMISIONES: </strong>", aux$emistot2[which(orghalkg > 0)]),
             group = "Organohalogenados")  %>%
  addMarkers(data=puntos_sp62, icon = iconos[6],
             clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),
             popup = paste0( "<strong>NRA: </strong>", puntos2$NRA[which(saozokg > 0)], "</br>",
                             "<strong>MUNICIPIO: </strong>", paste(puntos2$MUNICIPIO[which(saozokg > 0)],puntos2$ESTADO[which(saozokg > 0)],sep = ", "), "</br>",
                             "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", puntos2$NOMBRE[which(saozokg > 0)], "</br>",
                             "<strong>TIPO DE INDUSTRIA: </strong>", puntos2$SECTOR[which(saozokg > 0)], "</br>",
                             "<strong>GIRO: </strong>", puntos2$DESC_SCIAN[which(saozokg > 0)], "</br>",
                             "<strong>ACTIVIDAD: </strong>", puntos2$ACTIVIDAD[which(saozokg > 0)], "</br>",
                             "<strong>EMISIONES: </strong>", aux$emistot2[which(saozokg > 0)]),
             group = "Sustancias Agotadoras de la Capa de Ozono")  %>%
  addMarkers(data=puntos_sp72, icon = iconos[7],
             clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),
             popup = paste0( "<strong>NRA: </strong>", puntos2$NRA[which(otrspkg > 0)], "</br>",
                             "<strong>MUNICIPIO: </strong>", paste(puntos2$MUNICIPIO[which(otrspkg > 0)],puntos2$ESTADO[which(otrspkg > 0)],sep = ", "), "</br>",
                             "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", puntos2$NOMBRE[which(otrspkg > 0)], "</br>",
                             "<strong>TIPO DE INDUSTRIA: </strong>", puntos2$SECTOR[which(otrspkg > 0)], "</br>",
                             "<strong>GIRO: </strong>", puntos2$DESC_SCIAN[which(otrspkg > 0)], "</br>",
                             "<strong>ACTIVIDAD: </strong>", puntos2$ACTIVIDAD[which(otrspkg > 0)], "</br>",
                             "<strong>EMISIONES: </strong>", aux$emistot2[which(otrspkg > 0)]),
             group = "Otras Sustancias Peligrosas")  %>%
  addMarkers(data=puntos_sp82, icon = iconos[8],
             clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = T),
             popup = paste0( "<strong>NRA: </strong>", puntos2$NRA[which(plagkg > 0)], "</br>",
                             "<strong>MUNICIPIO: </strong>", paste(puntos2$MUNICIPIO[which(plagkg > 0)],puntos2$ESTADO[which(plagkg > 0)],sep = ", "), "</br>",
                             "<strong>NOMBRE_ESTABLECIMIENTO: </strong>", puntos2$NOMBRE[which(plagkg > 0)], "</br>",
                             "<strong>TIPO DE INDUSTRIA: </strong>", puntos2$SECTOR[which(plagkg > 0)], "</br>",
                             "<strong>GIRO: </strong>", puntos2$DESC_SCIAN[which(plagkg > 0)], "</br>",
                             "<strong>ACTIVIDAD: </strong>", puntos2$ACTIVIDAD[which(plagkg > 0)], "</br>",
                             "<strong>EMISIONES: </strong>", aux$emistot2[which(plagkg > 0)]),
             group = "Plaguicidas")  %>%
  addCircles(puntos_sp12$lon, puntos_sp12$lat, weight=1, radius = rad_copkg[which(copkg > 0)], color= "cyan4", 
             group = "Compuestos Orgánicos Persistentes") %>% 
  addCircles(puntos_sp22$lon, puntos_sp22$lat, weight=1, radius = rad_geikg[which(geikg > 0)], color= "cornflowerblue", 
             group = "Gases de Efecto Invernadero") %>%
  addCircles(puntos_sp32$lon, puntos_sp32$lat, weight=1, radius = rad_haralkg[which(haralkg > 0)], color= "chartreuse4", 
             group = "Hidrocarburos Aromáticos y Alifáticos") %>%  
  addCircles(puntos_sp42$lon, puntos_sp42$lat, weight=1, radius = rad_metkg[which(metkg > 0)], color= "chocolate3", 
             group = "Metales") %>% 
  addCircles(puntos_sp52$lon, puntos_sp52$lat, weight=1, radius = rad_orghalkg[which(orghalkg > 0)], color= "chocolate1", 
             group = "Organohalogenados") %>%  
  addCircles(puntos_sp62$lon, puntos_sp62$lat, weight=1, radius = rad_saozokg[which(saozokg > 0)], color= "blueviolet", 
             group = "Sustancias Agotadoras de la Capa de Ozono") %>%
  addCircles(puntos_sp72$lon, puntos_sp72$lat, weight=1, radius = rad_otrspkg[which(otrspkg > 0)], color= "brown", 
             group = "Otras Sustancias Peligrosas") %>%
  addCircles(puntos_sp82$lon, puntos_sp82$lat, weight=1, radius = rad_plagkg[which(plagkg > 0)], color= "aquamarine3", 
             group = "Plaguicidas") %>%
  addLayersControl(overlayGroups = c("Compuestos Orgánicos Persistentes", "Gases de Efecto Invernadero", "Hidrocarburos Aromáticos y Alifáticos", 
                                     "Metales", "Organohalogenados", "Sustancias Agotadoras de la Capa de Ozono", "Otras Sustancias Peligrosas", 
                                     "Plaguicidas"), 
                   options = layersControlOptions(collapsed = T), position="topleft") %>% 
  addMeasure(
    position = "bottomleft",
    primaryLengthUnit = "meters",
    primaryAreaUnit = "sqmeters",
    activeColor = "#3D535D",
    completedColor = "#7D4479") %>%   
  addEasyButton(easyButton(
    icon="fa-crosshairs", 
    title="Ubícame",
    onClick=JS("function(btn, map){ map.locate({setView: true}); }")))  %>%
  addMouseCoordinates() %>%
  addHomeButton(extent(puntos_sp2), layer.name = "i",  position = "topleft")